{"ast":null,"code":"import _regeneratorRuntime from \"/home/ikerpacheco/techtest/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/ikerpacheco/techtest/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      eventView: Object,\n      name: \"eventView\",\n      start_date: \"\",\n      end_date: \"\",\n      start_hour: \"\",\n      end_hour: \"\"\n    };\n  },\n  get_hours: function get_hours(eventView) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var str1, str2;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              str1 = eventView.start.local.split('T');\n              str2 = eventView.end.local.split('T');\n              _this.start_date = str1[0];\n              _this.end_date = str2[0];\n              _this.start_hour = str1[1];\n              _this.end_hour = str2[1];\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  created: function created() {\n    this.eventView = this.$route.params.data;\n    this.get_hours(this.eventView);\n    console.log(this.eventView);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;EACAA;IAAA;MACAC,iBADA;MAEAC,iBAFA;MAGAC,cAHA;MAIAC,YAJA;MAKAC,cALA;MAMAC;IANA;EAAA,CADA;EASAC,SATA,qBASAN,SATA,EASA;IAAA;;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cACAO,IADA,GACAP,gCADA;cAEAQ,IAFA,GAEAR,8BAFA;cAIA;cACA;cACA;cACA;;YAPA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAQA,CAjBA;EAkBAS,OAlBA,qBAkBA;IACA;IACA;IACAC;EACA;AAtBA","names":["data","eventView","name","start_date","end_date","start_hour","end_hour","get_hours","str1","str2","created","console"],"sourceRoot":"src/views","sources":["EventView.vue"],"sourcesContent":["<template>\n<title>{{eventView.name.text}}</title>\n<v-app>\n  <body>\n  <v-container>\n    <v-img height=\"500\" :src=\"eventView.logo.url\"></v-img>\n  <v-main>\n  <div class=\"event\">\n    <h1 class=\"event_name\" align=\"center\">{{eventView.name.text}}</h1><hr/>\n    <h2 class=\"event_section_title\" align=\"left\">Event description:</h2>\n    <p class=\"event_description\" align=\"left\">{{eventView.description.text}}</p>\n    <h2 class=\"event_section_title\" align=\"left\">Address:</h2>\n    <p class=\"event_description\" align=\"left\">{{eventView.venue.address.address_1}}</p>\n    <h2 class=\"event_section_title\" align=\"left\">Starting date and ending date</h2>\n    <p class=\"event_description\" align=\"left\">The event starts the day {{start_date}}</p>\n\n    <v-btn align=\"left\">BUY TICKETS</v-btn>\n    <v-btn align=\"left\"><a href=\"./\" style=\"text-decoration: none\">RETURN</a></v-btn>\n  </div>\n  </v-main>\n  </v-container>\n  </body>\n</v-app>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    eventView: Object,\n    name:\"eventView\",\n    start_date: \"\",\n    end_date: \"\",\n    start_hour: \"\",\n    end_hour: \"\"\n  }),\n  async get_hours(eventView) {\n      let str1 = eventView.start.local.split('T');\n      let str2 = eventView.end.local.split('T');\n\n      this.start_date = str1[0];\n      this.end_date = str2[0];\n      this.start_hour = str1[1];\n      this.end_hour = str2[1];\n  },\n  created() {\n    this.eventView = this.$route.params.data;\n    this.get_hours(this.eventView);\n    console.log(this.eventView);\n  }\n}\n</script>\n<style>\n\n  body {\n    font-family: 'montseratt', sans-serif;\n  }\n\n  .event_name\n  {\n    margin: 50px 10px;\n    font-size: 65px;\n  }\n  .event_section_title\n  {\n    margin: 40px 10px;\n    font-size: 30px;\n  }\n  .event_description\n  {\n    margin: 10px 10px;\n    font-size: 20px;\n  }\n\n  main {\n    width: 100vw;\n    min-height: 20vh;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n</style>"]},"metadata":{},"sourceType":"module"}